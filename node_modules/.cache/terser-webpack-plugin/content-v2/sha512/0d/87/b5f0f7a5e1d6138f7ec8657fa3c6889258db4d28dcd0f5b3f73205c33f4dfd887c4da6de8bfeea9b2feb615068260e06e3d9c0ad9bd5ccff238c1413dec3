{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{613:function(v,_,a){v.exports=a.p+\"assets/img/004-01.45d41ef1.jpeg\"},614:function(v,_,a){v.exports=a.p+\"assets/img/004-02.6dc2e84d.jpeg\"},669:function(v,_,a){\"use strict\";a.r(_);var s=a(14),t=Object(s.a)({},(function(){var v=this,_=v.$createElement,s=v._self._c||_;return s(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":v.$parent.slotKey}},[s(\"h1\",{attrs:{id:\"v8引擎\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#v8引擎\"}},[v._v(\"#\")]),v._v(\" V8引擎\")]),v._v(\" \"),s(\"ul\",[s(\"li\",[v._v(\"V8是一款主流的JavaScript执行引擎，能够高效运转JS\")]),v._v(\" \"),s(\"li\",[v._v(\"V8采用即时编译(可以将源码翻译成机器码，执行速度很快)\")]),v._v(\" \"),s(\"li\",[v._v(\"V8内存设限(64位1.5G，32位800M)\\n\"),s(\"ul\",[s(\"li\",[v._v(\"V8针对浏览器设计，现有的内存大小对于web应用足够使用\")]),v._v(\" \"),s(\"li\",[v._v(\"当垃圾内存达到1.5G时采用增量标记进行垃圾回收只需要50ms，而采用非增量标记则需要1s，就使用1.5g为界限\")])])])]),v._v(\" \"),s(\"p\",[v._v(\"对于新老生代都可以调整堆内存的大小，具体如下\")]),v._v(\" \"),s(\"div\",{staticClass:\"language- line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[v._v(\"// 新生代(单位kb)\\nnode --max-new-space-size = 2048 xxx.js\\n\\n// 老生代(单位mb)\\nnode --max-old-space-size = 2048 xxx.js\\n\")])]),v._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[v._v(\"1\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[v._v(\"2\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[v._v(\"3\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[v._v(\"4\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[v._v(\"5\")]),s(\"br\")])]),s(\"h2\",{attrs:{id:\"v8垃圾回收策略\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#v8垃圾回收策略\"}},[v._v(\"#\")]),v._v(\" V8垃圾回收策略\")]),v._v(\" \"),s(\"ul\",[s(\"li\",[v._v(\"采用分代回收的思想\")]),v._v(\" \"),s(\"li\",[v._v(\"内存分为新生代存储区和老生代存储区\")]),v._v(\" \"),s(\"li\",[v._v(\"针对不同对象采用不同的算法\")])]),v._v(\" \"),s(\"h2\",{attrs:{id:\"v8中常用gc算法\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#v8中常用gc算法\"}},[v._v(\"#\")]),v._v(\" V8中常用GC算法\")]),v._v(\" \"),s(\"ul\",[s(\"li\",[v._v(\"分代回收\")]),v._v(\" \"),s(\"li\",[v._v(\"空间复制\")]),v._v(\" \"),s(\"li\",[v._v(\"标记清除\")]),v._v(\" \"),s(\"li\",[v._v(\"标记整理\")]),v._v(\" \"),s(\"li\",[v._v(\"标记增量\")])]),v._v(\" \"),s(\"h2\",{attrs:{id:\"v8如何回收新老生代对象\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#v8如何回收新老生代对象\"}},[v._v(\"#\")]),v._v(\" V8如何回收新老生代对象\")]),v._v(\" \"),s(\"h3\",{attrs:{id:\"v8内存分配\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#v8内存分配\"}},[v._v(\"#\")]),v._v(\" V8内存分配\")]),v._v(\" \"),s(\"ul\",[s(\"li\",[v._v(\"V8内存空间一分为二\")]),v._v(\" \"),s(\"li\",[v._v(\"小空间用于存储新生代对象（32M|16M）\")]),v._v(\" \"),s(\"li\",[v._v(\"新生代指的是存活时间较短的对象\")])]),v._v(\" \"),s(\"p\",[s(\"img\",{attrs:{src:a(613),alt:\"V8内存分配\"}}),v._v(\"\\n图1 V8内存分配图示\")]),v._v(\" \"),s(\"h3\",{attrs:{id:\"新生代对象回收实现\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#新生代对象回收实现\"}},[v._v(\"#\")]),v._v(\" 新生代对象回收实现\")]),v._v(\" \"),s(\"ul\",[s(\"li\",[v._v(\"回收过程采用复制算法+标记整理\")]),v._v(\" \"),s(\"li\",[v._v(\"新生代内存区分为两个等大空间（使用空间为From，空闲空间为To）\")]),v._v(\" \"),s(\"li\",[v._v(\"活动对象存储于From空间\")]),v._v(\" \"),s(\"li\",[v._v(\"标记整理后将活动对象拷贝至To空间（To中的内存是按顺序从头到尾放置的, 防止碎片化），非存活对象直接回收(From直接回收)\")]),v._v(\" \"),s(\"li\",[v._v(\"From与To交换空间完成，From就被闲置，To变成正在使用，如此循环\")]),v._v(\" \"),s(\"li\",[v._v(\"新生代的劣势在于就是只使用了一半的空间，但处理生命周期很短的对象，效率很高\")])]),v._v(\" \"),s(\"h4\",{attrs:{id:\"回收细节说明\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#回收细节说明\"}},[v._v(\"#\")]),v._v(\" 回收细节说明\")]),v._v(\" \"),s(\"ul\",[s(\"li\",[v._v(\"拷贝过程中可能出现\"),s(\"code\",[v._v(\"晋升\")])]),v._v(\" \"),s(\"li\",[s(\"code\",[v._v(\"晋升\")]),v._v(\"就是将新生代对象移动至老生代\")]),v._v(\" \"),s(\"li\",[s(\"code\",[v._v(\"晋升的条件\")]),v._v(\" \"),s(\"ul\",[s(\"li\",[v._v(\"一轮GC还存活的新生代需要\"),s(\"code\",[v._v(\"晋升\")])]),v._v(\" \"),s(\"li\",[v._v(\"To空间的使用率超过25%(当to空间使用率超过一定值后，当它变成from空间后，再添加新的对象就会导致空间不足)\")])])])]),v._v(\" \"),s(\"h3\",{attrs:{id:\"老生代对象回收\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#老生代对象回收\"}},[v._v(\"#\")]),v._v(\" 老生代对象回收\")]),v._v(\" \"),s(\"h4\",{attrs:{id:\"老生代对象说明\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#老生代对象说明\"}},[v._v(\"#\")]),v._v(\" 老生代对象说明\")]),v._v(\" \"),s(\"ul\",[s(\"li\",[v._v(\"老生代对象存放在右侧老生代区域\")]),v._v(\" \"),s(\"li\",[v._v(\"64位操作系统中1.4G，32操作系统中是700M\")]),v._v(\" \"),s(\"li\",[v._v(\"老生代对象就是指存活时间较长的对象（全局变量、闭包）\")])]),v._v(\" \"),s(\"h4\",{attrs:{id:\"回收实现\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#回收实现\"}},[v._v(\"#\")]),v._v(\" 回收实现\")]),v._v(\" \"),s(\"ul\",[s(\"li\",[v._v(\"主要采用标记清除、标记整理、增量标记算法\")]),v._v(\" \"),s(\"li\",[v._v(\"首先使用标记清除完成垃圾空间的回收\")]),v._v(\" \"),s(\"li\",[v._v(\"采用标记整理进行空间优化（一般在出现\"),s(\"code\",[v._v(\"晋升\")]),v._v(\"时触发）\")]),v._v(\" \"),s(\"li\",[v._v(\"采用增量标记进行效率优化\")])]),v._v(\" \"),s(\"h4\",{attrs:{id:\"细节对比\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#细节对比\"}},[v._v(\"#\")]),v._v(\" 细节对比\")]),v._v(\" \"),s(\"ul\",[s(\"li\",[v._v(\"新生代区域垃圾回收使用空间换时间，虽然一分为二，但处理的对象生命周期短，且对象不多，所以效率很高\")]),v._v(\" \"),s(\"li\",[v._v(\"老生代区域垃圾回收不适合复制算法，因为老生代空间比较大且存放的数据多，复制慢且浪费时间和空间\")])]),v._v(\" \"),s(\"h4\",{attrs:{id:\"增量标记\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#增量标记\"}},[v._v(\"#\")]),v._v(\" 增量标记\")]),v._v(\" \"),s(\"p\",[v._v(\"由于垃圾回收会阻塞js的运行，增量标记就是将原本一次性做完的标记，拆分成一段一段的执行，让标记和js运行交替执行，也就不会阻塞js的执行\")]),v._v(\" \"),s(\"p\",[v._v(\"看似程序运行期间停滞了很多次，但每一次标记时间很短，所有间隔很短，不会出现非增量标记时的长时间卡顿的问题\")]),v._v(\" \"),s(\"p\",[s(\"img\",{attrs:{src:a(614),alt:\"增量标记\"}}),v._v(\"\\n图2 增量标记图示\")]),v._v(\" \"),s(\"h2\",{attrs:{id:\"v8垃圾回收总结\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#v8垃圾回收总结\"}},[v._v(\"#\")]),v._v(\" V8垃圾回收总结\")]),v._v(\" \"),s(\"ul\",[s(\"li\",[v._v(\"V8是一款主流的JavaScript执行引擎\")]),v._v(\" \"),s(\"li\",[v._v(\"V8内存设置上限\")]),v._v(\" \"),s(\"li\",[v._v(\"V8采用基于分代回收思想实现垃圾回收\")]),v._v(\" \"),s(\"li\",[v._v(\"V8内存分为新生代和老生代\")]),v._v(\" \"),s(\"li\",[v._v(\"V8垃圾回收常见算法：分代回收、空间复制、标记清除、标记整理、增量标记\")])])])}),[],!1,null,null,null);_.default=t.exports}}]);","extractedComments":[]}