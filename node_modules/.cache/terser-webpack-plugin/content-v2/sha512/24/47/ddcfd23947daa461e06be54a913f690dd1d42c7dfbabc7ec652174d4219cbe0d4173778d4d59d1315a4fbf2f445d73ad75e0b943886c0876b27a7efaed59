{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{666:function(t,s,a){\"use strict\";a.r(s);var n=a(14),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[a(\"p\",[t._v(\"JS内部自带了GC机制，因此我们不需要自己去操作垃圾回收，就会自己去优化清理内存\")]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"示例\")])]),t._v(\" \"),a(\"div\",{staticClass:\"language-javaScript line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"function\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"fn\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    arrList \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\"\\n    arrList\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"100000\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"lg is a coder\"')]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"fn\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\")])]),t._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"5\")]),a(\"br\")])]),a(\"div\",{staticClass:\"custom-block tip\"},[a(\"p\",{staticClass:\"title\"}),a(\"p\",[t._v(\"当前函数在调用时会发现内存在持续的升高，这就造成了内存的泄漏\")])]),a(\"h2\",{attrs:{id:\"内存管理介绍\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#内存管理介绍\"}},[t._v(\"#\")]),t._v(\" 内存管理介绍\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"内存：由可读写单元组成，表示一片可操作空间\")]),t._v(\" \"),a(\"li\",[t._v(\"管理：人为的去操作一片空间的申请、使用和释放\")]),t._v(\" \"),a(\"li\",[t._v(\"内存管理：开发者主动申请空间、使用空间、释放空间\")]),t._v(\" \"),a(\"li\",[t._v(\"管理流程：申请——使用——释放\")])]),t._v(\" \"),a(\"h2\",{attrs:{id:\"javascript中的内存管理\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#javascript中的内存管理\"}},[t._v(\"#\")]),t._v(\" JavaScript中的内存管理\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"申请内存空间\")]),t._v(\" \"),a(\"li\",[t._v(\"使用内存管理\")]),t._v(\" \"),a(\"li\",[t._v(\"释放内存空间\")])]),t._v(\" \"),a(\"p\",[t._v(\"由于ECMAScript没有提供控制垃圾回收的API，所以我不能像C和C++一样去管理内存空间；但我们可以使用JS演示内存空间的生命周期\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-javaScript line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[a(\"code\")]),t._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"})])])}),[],!1,null,null,null);s.default=r.exports}}]);","extractedComments":[]}